
source-file ~/.tmux/theme.conf

## Some tweaks to the status line
#set -g status-bg green
#set -g status-right "%H:%M"
#set -g window-status-current-attr "underscore"

# Lock after 15 minutes
#set -g lock-after-time 1800

# Keep windows around after they exit
#set -g remain-on-exit on

# Turn on xterm-keys so that additional function keys get escape sequences
set-window-option -g xterm-keys on

# Renumber windows when one is closed
#set -g renumber-windows on

# Change the prefix key to C-a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Second prefix key
#set -g prefix2 C-b

# Turn the mouse on, but without copy mode dragging
set-option -g mouse on
#set-option -g mouse-utf8 on
#unbind -n MouseDrag1Pane
#unbind -tvi-copy MouseDrag1Pane
#unbind -temacs-copy MouseDrag1Pane

## Some extra key bindings to select higher numbered windows
#bind F1 selectw -t:10
#bind F2 selectw -t:11
#bind F3 selectw -t:12
#bind F4 selectw -t:13
#bind F5 selectw -t:14
#bind F6 selectw -t:15
#bind F7 selectw -t:16
#bind F8 selectw -t:17
#bind F9 selectw -t:18
#bind F10 selectw -t:19
#bind F11 selectw -t:20
#bind F12 selectw -t:21

# Keys to toggle monitoring activity in a window, and synchronize-panes
bind m set monitor-activity
#bind y set synchronize-panes\; display 'synchronize-panes #{?synchronize-panes,on,off}'

## Keys to hide and show a window name from the status line
#bind '-' set window-status-format '#I'\; set window-status-current-format '#I'
#bind '+' set window-status-format '#I:#W#F'\; set window-status-current-format '#I:#W#F'

## Create a single default session
#neww -d -s0 -nsh 'exec zsh'
##new -d -s0 -nirssi 'exec irssi'
##set -t0:0 monitor-activity on
##set  -t0:0 aggressive-resize on
#neww -d -ntodo 'exec vim -c :TW'
#setw -t0:1 aggressive-resize on
##neww -d -nmutt 'exec mutt'
##setw -t0:2 aggressive-resize on
#neww -d
#neww -d
#neww -d

# vi
setw -g mode-keys vi
setw -g status-keys vi
# emacs
#setw -g mode-keys emacs
#setw -g status-keys emacs

set -g default-terminal "screen-256color"
#set -g default-terminal "xterm-256color"
#set -g default-terminal "tmux"

set -g default-shell '/usr/local/bin/zsh'
#set -g default-command ''

set -g history-limit 50000

# rename windows
setw -g automatic-rename on

# window titles
set -g set-titles on
#set -g set-titles-string ""

# vis-a-vis
#set -g visual-activity
#set -g destroy-unattached
#set -g detach-on-destroy

## bells and monitoring
#set -g visual-silence on
#set -g visual-bell off
##set -g bell-action any
# No bells at all
set -g bell-action none

# Start windows and panes at 1, not 0
set -g base-index 0
set -g pane-base-index 0

# If we want Vim to be told about focus: http://git.io/2UqSgQ
set -g focus-events on

# amount of time for which status line messages and other indicators
# are displayed. time is in milliseconds.
set -g display-time 3000

# Shorten input delay (tmux normally adds a short delay on inputs)
#set -sg escape-time 0

# display visible indicator of each pane
bind-key w display-panes

# send commands to nested session with ^s s
bind-key s send-prefix

# reload this on 'r'
bind r source-file ~/.tmux.conf

## vim copying
bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind-key -t vi-copy PPage page-up
bind-key -t vi-copy NPage page-down

bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy Escape cancel
bind y run "tmux save-buffer - | pbcopy"

# copying and pasting
bind-key [ copy-mode
bind-key ] paste-buffer -s \015
#unbind [
#unbind ]

# choose buffer to paste interactively (default key was '=')
#bind p paste-buffer
#bind-key p choose-buffer
bind-key p previous-window

# Bring back clear screen under tmux prefix
#bind C-l send-keys 'C-l'

# last window
#bind L last-window

# Sync keys pressed across panes
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
#unbind C-h
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

bind -n "C-\\" if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Similar to 'C-w j' to navigate windows in Vim
unbind-key h
unbind-key j
unbind-key k
unbind-key l
bind-key j select-pane -D
bind-key k select-pane -U
bind-key h select-pane -L
bind-key l select-pane -R
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# fix resizing (does not work with iterm integration)
setw -g aggressive-resize on

# vim resizes
bind - resize-pane -D 1
bind + resize-pane -U 1
bind < resize-pane -L 1
bind > resize-pane -R 1

# faster resizes
bind J resize-pane -D 5
bind K resize-pane -U 5
bind H resize-pane -L 5
bind L resize-pane -R 5

## swap panes
bind-key -r J swap-pane -D
bind-key -r K swap-pane -U

# resize panes like vim
bind-key -r < resize-pane -L 3
bind-key -r > resize-pane -R 3
bind-key -r + resize-pane -U 1
bind-key -r = resize-pane -D 1

## vim's definition of a horizontal/vertical split is reversed from tmux's
#bind-key s split-window -v
#bind-key v split-window -h

# vim style split + perserve pwd
bind-key s split-window -c '#{pane_current_path}'
bind-key v split-window -h -c '#{pane_current_path}'

# split or new window path perserve
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"


# list all paste buffers (default key is '#')
bind-key b list-buffers

# delete the most recently copied buffer of text (default key was '-')
bind-key x delete-buffer

# Clear scrollback history
bind-key C-k clear-history

# Screen-like key bindings

# new window
bind-key C-c new-window
bind-key c new-window

# quit
bind-key \ confirm-before kill-server

# displays
bind-key * list-clients



## List of plugins
## Supports `github_username/repo` or full git repo URLs
#set -g @tpm_plugins '              \
#  tmux-plugins/tpm                 \
#  tmux-plugins/tmux-sensible       \
#  tmux-plugins/tmux-copycat        \
#  tmux-plugins/tmux-yank           \
#  tmux-plugins/tmux-open           \
#  tmux-plugins/tmux-logging        \
#  tmux-plugins/tmux-resurrect      \
#  tmux-plugins/tmux-continuum      \
#  tmux-plugins/tmux-urlview        \
#  tmux-plugins/tmux-fpp            \
#'


# List of plugins
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Start tmux on login
set -g @continuum-boot-options 'iterm'

# Restore last session automagically
set -g @continuum-restore 'on'

# Also save/restore neovim sessions
# for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'

# Restore pane contents
set -g @resurrect-capture-pane-contents 'on'

# regex search
set -g @plugin 'tmux-plugins/tmux-copycat'

# integration with system clipboard
set -g @plugin 'tmux-plugins/tmux-yank'

## Nice highlight when in cmd mode
#set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
##set -g status-right '#{prefix_highlight} | %a %Y-%m-%d %H:%M'
##set -g @prefix_highlight_fg 'white'
##set -g @prefix_highlight_bg 'blue'

## Status bar nicities
#set -g @plugin 'tmux-plugins/tmux-battery'
#set -g @plugin 'tmux-plugins/tmux-cpu'

set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Fix mouse wheel scrolling
set -g @plugin 'nhdaly/tmux-scroll-copy-mode'
set -g @scroll-without-changing-pane "on"
#set -g @prevent-scroll-for-fullscreen-alternate-buffer "on"
set -g @scroll-in-moused-over-pane "on"

# One line is horrible.
set -g @scroll-speed-num-lines-per-scroll 10

#bind -t vi-copy WheelUpPane halfpage-up
#bind -t vi-copy WheelDownPane halfpage-down

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

